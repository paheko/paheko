/* Forms */
fieldset {
    border: 1px solid var(--gLightBorderColor);
    border-radius: .3em;
    padding: 0.8em 1em 0 1em;
    margin-bottom: 1em;
    padding: 0.5em;
}

fieldset legend {
    padding: 0 0.5em;
    font-weight: bold;
    color: rgb(var(--gTextColor));
}

fieldset.header {
    grid-column: span 2;
    margin-top: 1em;
}

fieldset.header legend {
    font-size: 1.5em;
    text-align: center;
}

fieldset.header p input {
    font-size: 1.5em;
}

dl dt label {
    font-weight: bold;
}

fieldset dl dt b {
    color: rgb(var(--gHoverLinkColor));
    font-size: 0.7em;
    font-weight: normal;
    vertical-align: super;
}

fieldset dl dt i {
    color: var(--gLightBorderColor);
    font-size: 0.7em;
    font-weight: normal;
    vertical-align: super;
}

fieldset dl dd {
    padding: 0.2em 0.5em 0.2em 1em;
}

fieldset dl dd ol, fieldset dl dd ul {
    margin-left: 1.5em;
}

fieldset dl dl {
    margin: .5em 0 .5em 1.2em;
}

label:hover {
    cursor: pointer;
}

input[type=checkbox] + label:hover {
    border: none;
}

/* We can't use :not([type=checkbox]):not([type=radio]) here as it is too specific
and then it's a mess to override the selector after... */
input[type=text], input[type=number], input[type=color],
input[type=date], input[type=datetime-local], input[type=datetime], input[type=time], input[type=week], input[type=year],
input[type=email], input[type=file], input[type=url], input[type=month],
input[type=password], input[type=range], input[type=search], input[type=tel],
textarea, select, .input-list, .file-selector {
    padding: .4rem .6rem;
    font-family: inherit;
    min-width: 20em;
    max-width: 100%;
    border: 1px solid rgb(var(--gMainColor));
    border-radius: .25rem;
    font-size: inherit;
    background: rgb(var(--gBgColor));
    color: rgb(var(--gTextColor));
    transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
}

textarea.full-width, input.full-width {
    width: calc(100% - 1.2rem);
}

tbody input[type=text], tbody input[type=number], tbody input[type=color],
tbody input[type=date], tbody input[type=datetime-local], tbody input[type=datetime],
tbody input[type=time], tbody input[type=week], tbody input[type=year],
tbody input[type=email], tbody input[type=file], tbody input[type=url], tbody input[type=month],
tbody input[type=password], tbody input[type=range], tbody input[type=search], tbody input[type=tel],
tbody textarea, tbody select {
    min-width: 5em;
    width: calc(100% - 1.2rem);
}


input:not(:placeholder-shown):focus:invalid, textarea:not(:placeholder-shown):focus:invalid {
    border-color: rgb(var(--gHoverLinkColor));
    box-shadow: 0 0 5px .3rem rgba(var(--gHoverLinkColor), 0.5);
}

/* Fake checkbox and radio buttons */
input[type=checkbox], input[type=radio] {
    position: absolute;
    opacity: 0;
}

input[type=checkbox] + label::before, input[type=radio] + label::before {
    display: inline-block;
    width: 1em;
    height: 1em;
    text-align: center;
    transition: color .2s, box-shadow .2s ease-in-out;
    text-shadow: 1px 1px 3px var(--gLightBorderColor);
    cursor: pointer;
    font-family: "paheko";
    font-size: 1.2rem;
    font-weight: normal;
    color: rgb(var(--gMainColor));
    margin-right: .5em;
    border-radius: .25rem;
    padding: .1rem .2rem;
}

input[type=checkbox] + label::before {
    content: "☐";
}

input[type=checkbox]:checked + label::before {
    content: "☑";
}

input[type=radio] + label::before {
    content: "◯";
}

input[type=radio]:checked + label::before {
    content: "⬤";
}

input:hover + label::before {
    color: rgb(var(--gSecondColor));
}

input:checked + label::before {
    text-shadow: 1px 1px 5px rgba(var(--gSecondColor), 0.5);
}

#queryBuilder input[type=checkbox] {
    position: unset;
    opacity: unset;
}

/* buttons */

input[type=submit], input[type=button], button, input[type=file], input[type=color] {
    border-radius: 1em;
    border: none;
    box-shadow: 0px 0px 5px 0 var(--gLightBorderColor);
    cursor: pointer;
    border: 2px solid rgba(var(--gMainColor), 0.5);
    background: rgba(var(--gSecondColor), 0.2);
    font-size: inherit;
    border-radius: .2em;
    padding: .2em .4em;
    margin: .2em .5em;
    text-decoration: none;
    transition: color .3s, background-color .3s;
    color: rgb(var(--gTextColor));
    display: inline-flex;
    flex-wrap: wrap;
    column-gap: .5em;
    align-items: center;
    justify-content: center;
}

input:focus, button:focus, select:focus, textarea:focus, input[type=radio]:focus + label::before, input[type=checkbox]:focus + label::before {
    box-shadow: 0 0 5px .2rem rgba(var(--gMainColor), 0.5);
    outline: 0;
}

a.icn-btn, b.btn {
    cursor: pointer;
    color: rgb(var(--gTextColor));
    border: 1px solid rgba(var(--gMainColor), 0.5);
    background: rgba(var(--gSecondColor), 0.1);
    user-select: none;
    display: inline-flex;
    column-gap: .5em;
    align-items: center;
    font-size: inherit;
    border-radius: .2em;
    padding: .2em .4em;
    margin: .2em .5em;
    white-space: pre;
    transition: color .3s, background-color .3s;
    text-decoration: underline;
    font-weight: normal;
    text-decoration: none;
}

a.icn-btn > span {
    text-decoration: underline;
    text-decoration-color: rgba(var(--gTextColor), 0.25);
}

a.icn-btn:hover span {
    text-decoration-color: rgba(var(--gHoverLinkColor), 1) !important;
}

b.btn {
    cursor: unset;
    text-decoration: none;
    border-bottom: 1px dashed rgba(var(--gMainColor), 0.5);
}

[data-icon]:before, .main[data-icon]:after, [data-icon].right:after {
    display: inline-block;
    font-family: "paheko", sans-serif;
    text-shadow: 1px 1px 1px var(--gLightBorderColor);
    font-size: 1.2em;
    line-height: .8em;
    vertical-align: middle;
    content: attr(data-icon);
    font-weight: normal;
    text-decoration: none;
}

[data-icon]:empty:before {
    padding: 0;
}

span[data-icon] {
    text-decoration: none;
}

/* Custom SVG icon */
.icn-btn > .icon {
    display: inline-block;
    padding-right: .3em;
    height: 1em;
    width: 1em;
    vertical-align: middle;
    transition: fill .3s, stroke .3s;
}

.icn-btn:hover > .icon {
    fill: rgb(var(--gHoverLinkColor)) !important;
    stroke: rgb(var(--gHoverLinkColor)) !important;
}

button.main, .icn-btn.main {
    color: rgb(var(--gTextColor));
    font-size: 1.2em;
    border-radius: 1em;
    padding: .5em 1em;
}

button.main[data-icon]:before, .icn-btn.main:before, .icn-btn.right:before {
    display: none;
}

button.main[data-icon]:after, .icn-btn.main[data-icon]:after {
    padding: 0;
    color: rgba(var(--gSecondColor));
    font-size: 1.5rem;
    line-height: .2em;
}

.submit .minor {
    font-size: .9em;
}

input[type=submit]:hover, input[type=button]:hover, button:hover, a.icn-btn:hover, input[type=file]:hover,
.radio-btn:hover div, a.num:hover, .num a:hover, input[type=color]:hover {
    background-color: rgba(var(--gSecondColor), 0.2);
    color: rgb(var(--gHoverLinkColor)) !important;
    border-color: rgb(var(--gSecondColor));
}

input[type=submit]:active, input[type=button]:active, button:active, input[type=file]:active {
    box-shadow: 0 0 10px .1rem rgb(var(--gSecondColor));
}

input[type=color] {
    width: 80px !important;
    height: 40px;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

input[type=color]::-webkit-color-swatch {
    border-radius: .5rem;
    border: none;
    box-shadow: 0  0 5px #000;
}
input[type=color]::-moz-color-swatch {
    border-radius: .5rem;
    border: none;
    box-shadow: 0  0 5px #000;
}

span.hue-selector {
    display: inline-block;
    position: relative;
    height: 2em;
    min-width: 10em;
    max-width: 30em;
    width: calc(100% - 1em);
}

span.hue-selector .gradient {
    display: flex;
    align-items: stretch;
    justify-content: stretch;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 1em;
    margin: .5em 0;
    border-radius: 1em;
    border: 1px solid #fff;
    outline: 1px solid #ccc;
    overflow: hidden;
}


span.hue-selector .gradient span {
    display: block;
    height: 100%;
    width: 100%;
}

span.hue-selector .gradient .color {
    background: linear-gradient(to right, hsl(0, var(--sl)), hsl(60, var(--sl)), hsl(120, var(--sl)), hsl(180, var(--sl)), hsl(240, var(--sl)), hsl(300, var(--sl)), hsl(0, var(--sl)));
}

span.hue-selector.hue-grey .gradient .grey {
    width: 15%;
    background: linear-gradient(to right, hsl(0, 0%, 100%), hsl(0, 0%, 0%));
}

/* Hide range input */
span.hue-selector input {
    width: 100%;
    height: 100%;
    display: block;
    opacity: 0;
    cursor: pointer;
    padding: 0;
    margin: 0;
}

span.hue-selector .handle {
    display: block;
    position: absolute;
    border-radius: 100%;
    left: var(--position);
    top: .125em;
    margin-left: -1em;
    background-color: var(--hsl);
    height: 1.5em;
    width: 1.5em;
    border: 3px solid #fff;
    pointer-events: none;
    box-shadow: 0px 0px 5px #999;
}

span.hue-selector.focus .gradient, span.hue-selector:hover .handle {
    box-shadow: 0 0 5px .2rem rgba(var(--gMainColor), 0.5);
}

.accesskeys a[accesskey]::after,
.accesskeys button[accesskey]:not(.main)::after,
.accesskeys button.main[data-icon]::before {
    content: attr(accesskey);
    display: inline-block;
    position: absolute;
    background: darkorange;
    color: #fff;
    box-shadow: 0px 0px 5px orange;
    padding: 2px 5px;
    border-radius: .5em;
    font-size: 12px;
    font-weight: bold;
    font-family: Arial !important;
    height: unset;
    line-height: unset;
    margin-left: 5px;
}

.accesskeys button.main[data-icon]::before {
    margin-left: -25px;
}

input.resetButton {
    margin-left: 1em;
}

input[readonly], input.disabled, input[disabled], textarea[disabled], select[disabled], button[disabled],
fieldset[disabled], fieldset[disabled] input, fieldset[disabled] textarea, fieldset[disabled] select, .radio-btn.disabled div {
    cursor: not-allowed;
    color: var(--gBorderColor);
    background-color: var(--gLightBackgroundColor);
    border-color: var(--gLightBorderColor);
}

fieldset[disabled] {
    background: none;
}

input[disabled]:hover, input[readonly]:hover {
    background-color: unset;
    color: unset;
    border-color: unset;
}

input[disabled] + label {
    color: var(--gBorderColor);
}

input[disabled] + label::before {
    color: var(--gBorderColor);
    cursor: not-allowed;
}

select, tbody select, input[size], tbody input[size], input[type=color], button, input[type=button], input[type=submit] {
    min-width: 0;
    width: auto;
}

input[type=number], tbody input[size] {
    min-width: 3em;
}

select {
    max-width: calc(100%);
}

select option[value=""] {
    color: var(--gBorderColor);
    background-color: var(--gLightBackgroundColor);
}

input.otp {
    font-family: monospace;
    font-size: 30px;
    width: 240px;
    letter-spacing: 22px;
    min-width: 0;
    padding-left: 10px;
    background: linear-gradient(rgb(var(--gMainColor)) 0 0) 40px,
        linear-gradient(rgb(var(--gMainColor)) 0 0) 80px,
        linear-gradient(rgb(var(--gMainColor)) 0 0) 120px,
        linear-gradient(rgb(var(--gMainColor)) 0 0) 160px,
        linear-gradient(rgb(var(--gMainColor)) 0 0) 200px;
    background-size:1px 100%;
    background-repeat:no-repeat;
}

.otp-recovery {
    text-align: center;
}

.otp-recovery textarea {
    text-align: center;
    font-size: 20px;
    font-family: monospace;
    width: auto;
    min-width: 0;
    display: block;
    margin: 1em auto;
}

/* Radio button lists (eg. new transaction) */
form .radio-btn {
    display: table;
    width: 100%;
    padding: 0;
    border-spacing: .5rem .2rem;
}

form .radio-btn label {
    display: table-row;
}

form .radio-btn input + label::before {
    display: table-cell;
}

form .radio-btn input:focus + label::before {
    box-shadow: none;
}

form .radio-btn input:focus + label div {
    box-shadow: 0 0 5px 1px rgb(var(--gSecondColor));
}

form .radio-btn div {
    display: table-cell;
    border: 1px solid rgba(var(--gSecondColor), 0.5);
    background-color: rgba(var(--gSecondColor), 0.1);
    font-size: inherit;
    border-radius: .2em;
    padding: .2em .4em;
    transition: color .3s, background-color .3s;
    color: rgb(var(--gTextColor));
}

form .radio-btn input {
    margin: 1em;
}

form .radio-btn .help {
    margin: 0;
    font-size: .9em;
}

form .radio-btn input:checked + label div {
    background-color: rgba(var(--gSecondColor), 0.3);
}

form .minor .radio-btn h3 {
    font-size: 1em;
}

form .minor .radio-btn div {
    display: table-cell;
    border: 1px solid rgba(var(--gSecondColor), 0.3);
    background-color: rgba(var(--gSecondColor), 0.05);
}

form .minor .radio-btn input:checked + label div {
    background-color: rgba(var(--gSecondColor), 0.2);
}


/* Custom list input */
form .input-list {
    padding: 0;
    display: inline-flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: start;
    min-width: 0;
}

form .input-list .label {
    padding: .4rem .6rem;
}

form .input-list button {
    padding: .4rem .6rem;
    align-self: stretch;
    margin: 0;
    border: none;
}

form .input-list .label button {
    padding: .2rem;
    border: none;
    background: none;
}

input.money {
    text-align: right;
}

input.money + b {
    padding: .2rem .6rem;
    line-height: 1.5rem;
    color: var(--gBorderColor);
}

p.submit {
    margin: 1em;
}

form .checkUncheck {
    float: left;
}

form span.password_check {
    margin-left: 1em;
    padding: .1em .3em;
    border-radius: .5em;
    color: #000;
}

form span.password_check.fail { background-color: #f99; }
form span.password_check.weak { background-color: #ff9; }
form span.password_check.medium { background-color: #ccf; }
form span.password_check.ok { background-color: #cfc; }

dd.help input[type=text] {
    cursor: pointer;
    font-family: monospace;
}

dd.help.example {
    margin-left: 2.5em;
    font-size: .9em;
}

p.action-upload em {
    display: block;
    color: var(--gBorderColor);
    font-size: .9em;
    font-style: normal;
}

.actions-center {
    text-align: center;
}

p.actions {
    float: right;
    clear: right;
    margin: .5em 0;
}

p.actions-spaced {
    display: flex;
    justify-content: space-between;
    margin: .5em 0;
}

/** Datepicker widget */
.datepicker-parent {
    position: relative;
}

dialog {
    display: none;
    background: rgb(var(--gBgColor));
    color: rgb(var(--gTextColor));
}

dialog[open] {
    display: block;
}

dialog.datepicker {
    user-select: none;
    position: absolute;
    left: 0;
    margin: 0;
    padding: .3rem;
    border: none;
    box-shadow: 0 0 5px #000;
    border-radius: .5rem;
    z-index: 1000;
}

.datepicker nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: center;
}


.datepicker nav input[type=button] {
    font-family: "paheko";
    height: 2em;
    width: 2em;
}

.datepicker span {
    white-space: nowrap;
}

.datepicker span * {
    font-size: 1rem;
    font-family: inherit;
    margin: .1rem;
    padding: .1rem;
    border: 1px solid var(--gLightBorderColor);
    text-align: center;
}

.datepicker tbody {
    border-collapse: collapse;
    width: 100%;
}

.datepicker thead td {
    font-size: 80%;
    color: var(--gBorderColor);
    text-align: center;
}

.datepicker tbody tr:nth-child(even) {
    background-color: var(--gLightBackgroundColor);
}

.datepicker tbody td:nth-child(6) input {
    color: var(--gBorderColor);
}
.datepicker tbody td:nth-child(7) input {
    color: var(--gBorderColor);
}

.datepicker tbody td {
    text-align: center;
    width: 14.3%;
    padding: 0;
}

.datepicker tbody td input {
    padding: .4rem .7rem;
    border: none;
    background: none;
    box-shadow: none;
    border-radius: .2rem;
    margin: 0;
}

.datepicker tbody td.focus input {
    background: #339;
    color: #fff;
}

.datepicker tbody input:hover {
    background: #ccf;
    color: darkred;
}

#queryBuilderForm textarea {
    width: calc(100% - 2em);
}

#queryBuilder .column select, #queryBuilderForm .actions select {
    max-width: 15em;
}

#queryBuilder td {
    vertical-align: top;
    padding: .1em .2em;
}

#queryBuilder td.buttons {
    white-space: nowrap;
}

#queryBuilder input[type=button], #queryBuilder .values input {
    margin: .1em;
}

#queryBuilderForm .actions label {
    margin: 0 .5em;
}

#queryBuilder tbody .values label {
    margin: 0 .3em;
}

#queryBuilderForm input[type=number] {
    width: 4em;
}

.dir-picker .breadcrumbs {
    margin-bottom: 1em;
}

.dir-picker .breadcrumbs button {
    border-width: 1px;
    font-size: .9em;
    opacity: 0.7;
}

.dir-picker .breadcrumbs .current button {
    font-weight: bold;
}

.dir-picker .folders {
    text-align: center;
}

.dir-picker .folder button {
    width: calc(100% - 1em);
    padding: .5em;
    text-align: left;
    font-size: 1.2em;
    border-width: 1px;
    background: none;
}

.dir-picker .folder button::before {
    color: var(--gLightBorderColor);
}

.dir-picker .parent button {
    margin-bottom: .5em;
    padding: .5em;
    width: calc(100% - 1.5em);
    border-width: 1px;
    background: none;
    border-color: var(--gLightBorderColor);
    text-align: left;
}

.dir-picker .help {
    text-align: center;
    padding: 1em;
    font-size: 1.3em;
}

.dir-picker .select {
    text-align: center;
    padding: 1em;
}

.dir-picker .select button {
    font-size: 1.2em;
}

.file-selector {
    position: relative;
    transition: opacity 0.5s;
}

.file-selector::before {
    content: "⇑";
    opacity: 0.2;
    font-size: 2em;
    padding: .2rem;
    position: absolute;
    right: 0;
    font-family: "paheko";
}

.file-selector label .help {
    font-style: italic;
}

.file-selector .preview {
    text-align: center;
}

.file-selector img {
    max-width: 10em;
    max-height: 5em;
}

.file-selector table.list .num {
    text-align: right;
}

/**
 * Progress spinner
 */
form.progressing {
    position: relative;
}

form fieldset, form p {
    transition: .5s filter linear;
}

.progressing > * {
    pointer-events: none;
    opacity: 0.5;
    filter: blur(3px);
    filter: grayscale(100%) blur(3px);
}

.progressing.block {
    height: 100px;
    position: relative;
}

.progressing::after {
    display: inline-block;
    content: " ";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    width: 50px;
    height: 50px;
    border: 5px solid var(--gBorderColor);
    border-radius: 50%;
    border-top-color: var(--gLightBackgroundColor);
    animation: spin 1s ease-in-out infinite;
    filter: none;
}

.progress-status {
    display: none;
}

.progressing .progress-status {
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    padding-top: 80px;
    text-align: center;
    width: 100%;
    height: 1em;
    filter: none !important;
    color: #000;
}

@keyframes spin { to { transform: rotate(360deg); } }

.dropping * {
    pointer-events: none;
}

.overlay {
    display: none;
    backdrop-filter: blur(5px);
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    align-items: center;
    justify-content: center;
    text-align: center;
    position: absolute;
    border-radius: .5em;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: -.5em;
    padding: 0;
    border: none;
    z-index: 10000;
    /*
    opacity: 0;
    display: flex;
    */
}

.loading .overlay::after {
    display: block;
    content: " ";
    width: 70px;
    height: 70px;
    border: 10px solid #fff;
    border-radius: 50%;
    border-top-color: #000;
    animation: spin 1s ease-in-out infinite;
    filter: none;
    position: absolute;
}

.loading .overlay::before {
    display: block;
    content: " ";
    width: 70px;
    height: 70px;
    border: 8px solid rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    position: absolute;
}

.loading .overlay .message {
    margin-top: 190px;
}

body > .overlay {
    margin: 0;
    border-radius: 0;
    position: fixed;
}

.overlay .message {
    padding: 1rem;
    font-size: 150%;
    font-weight: bold;
}

.dropping {
    position: relative;
}

.dropping .overlay, .loading .overlay {
    display: flex;
}

.selector header {
    margin-bottom: 2em;
}

.selector header h2 input {
    width: calc(100% - 1em);
}

.quick-search button[type=reset] {
    margin-left: -2.5em;
    background: none;
    border: none;
    color: var(--gBorderColor);
}

h2.quick-search button[type=reset] {
    font-size: 1rem;
}

.selector select {
    font-size: .9em;
    margin: .2em 0;
    padding: .2em;
    border-color: var(--gLightBorderColor);
    cursor: pointer;
    width: auto;
}

samp.copy {
    font-family: monospace;
    background: var(--gLightBorderColor);
    color: var(--gBorderColor);
    cursor: pointer;
    padding: .5em;
    border-radius: .5em;
}

samp.copy:hover {
    color: rgb(var(--gTextColor));
    box-shadow: 0px 0px 5px var(--gBorderColor);
}

dl.share {
    font-size: 1.3em;
}

dl.share dt, dl.share dd {
    margin: 1rem;
}

.datalist {
    display: inline-flex;
    align-items: flex-start;
}

.datalist span {
    position: relative;
}

.datalist.open datalist {
    display: flex;
    flex-direction: column;
    position: absolute;
    left: 0;
    right: 0;
    border: 1px solid rgb(var(--gMainColor));
    border-radius: .25rem;
    background: rgb(var(--gBgColor));
    color: rgb(var(--gTextColor));
    box-shadow: 0 0 5px .2rem rgba(var(--gMainColor), 0.5);
    overflow: hidden;
    overflow-y: auto;
    max-height: 20em;
    z-index: 1000;
}

.datalist.open option {
    display: block;
    padding: .2rem .6rem;
    cursor: pointer;
    user-select: none;
    font-size: .9em;
}

.datalist.open option:nth-of-type(even) {
    background: var(--gLightBackgroundColor);
}

.datalist.open option:hover, .datalist.open option.focus {
    background: rgba(var(--gHoverLinkColor), 0.2);
}

.datalist.open .match {
    font-weight: bold;
}

aside dt {
    margin-left: 1em;
}

@media screen and (max-width: 1279px) {
    #queryBuilder tbody tr {
        display: flex;
        flex-wrap: wrap;
        padding: .5em 0;
        margin-left: 6rem;
        border-top: .2rem solid #ccc;
        clear: both;
    }
    #queryBuilder tbody td {
        display: block;
    }
    #queryBuilder tbody td.buttons {
        margin-left: -6rem;
    }
}